!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
.DEFAULT_GOAL	rank02/ft_printf/tester/Makefile	/^.DEFAULT_GOAL	:= m$/;"	m
.DEFAULT_GOAL	rank02/get_next_line/tester/Makefile	/^.DEFAULT_GOAL			= a$/;"	m
10MBONUS	rank02/get_next_line/tester/Makefile	/^10MBONUS				= $(addprefix 10M, $(BONUS))$/;"	m
10MMANDATORY	rank02/get_next_line/tester/Makefile	/^10MMANDATORY			= $(addprefix 10M, $(MANDATORY))$/;"	m
10MMBONUS	rank02/get_next_line/tester/Makefile	/^10MMBONUS				= $(addprefix m10M, $(BONUS))$/;"	m
1BONUS	rank02/get_next_line/tester/Makefile	/^1BONUS					= $(addprefix 1, $(BONUS))$/;"	m
1MANDATORY	rank02/get_next_line/tester/Makefile	/^1MANDATORY				= $(addprefix 1, $(MANDATORY))$/;"	m
1MBONUS	rank02/get_next_line/tester/Makefile	/^1MBONUS					= $(addprefix m1, $(BONUS))$/;"	m
42BONUS	rank02/get_next_line/tester/Makefile	/^42BONUS					= $(addprefix 42, $(BONUS))$/;"	m
42MANDATORY	rank02/get_next_line/tester/Makefile	/^42MANDATORY				= $(addprefix 42, $(MANDATORY))$/;"	m
42MBONUS	rank02/get_next_line/tester/Makefile	/^42MBONUS				= $(addprefix m42, $(BONUS))$/;"	m
BG_BLACK	rank02/ft_printf/tester/utils/color.hpp	/^	BG_BLACK			= 40,$/;"	e	enum:Color
BG_BLACK	rank02/get_next_line/tester/utils/color.hpp	/^	BG_BLACK			= 40,$/;"	e	enum:Color
BG_BLUE	rank02/ft_printf/tester/utils/color.hpp	/^	BG_BLUE				= 44,$/;"	e	enum:Color
BG_BLUE	rank02/get_next_line/tester/utils/color.hpp	/^	BG_BLUE				= 44,$/;"	e	enum:Color
BG_CYAN	rank02/ft_printf/tester/utils/color.hpp	/^	BG_CYAN				= 46,$/;"	e	enum:Color
BG_CYAN	rank02/get_next_line/tester/utils/color.hpp	/^	BG_CYAN				= 46,$/;"	e	enum:Color
BG_DEFAULT	rank02/ft_printf/tester/utils/color.hpp	/^	BG_DEFAULT			= 49,$/;"	e	enum:Color
BG_DEFAULT	rank02/get_next_line/tester/utils/color.hpp	/^	BG_DEFAULT			= 49,$/;"	e	enum:Color
BG_DGRAY	rank02/ft_printf/tester/utils/color.hpp	/^	BG_DGRAY			= 100,$/;"	e	enum:Color
BG_DGRAY	rank02/get_next_line/tester/utils/color.hpp	/^	BG_DGRAY			= 100,$/;"	e	enum:Color
BG_GREEN	rank02/ft_printf/tester/utils/color.hpp	/^	BG_GREEN			= 42,$/;"	e	enum:Color
BG_GREEN	rank02/get_next_line/tester/utils/color.hpp	/^	BG_GREEN			= 42,$/;"	e	enum:Color
BG_LBLUE	rank02/ft_printf/tester/utils/color.hpp	/^	BG_LBLUE			= 104,$/;"	e	enum:Color
BG_LBLUE	rank02/get_next_line/tester/utils/color.hpp	/^	BG_LBLUE			= 104,$/;"	e	enum:Color
BG_LCYAN	rank02/ft_printf/tester/utils/color.hpp	/^	BG_LCYAN			= 106,$/;"	e	enum:Color
BG_LCYAN	rank02/get_next_line/tester/utils/color.hpp	/^	BG_LCYAN			= 106,$/;"	e	enum:Color
BG_LGRAY	rank02/ft_printf/tester/utils/color.hpp	/^	BG_LGRAY			= 47,$/;"	e	enum:Color
BG_LGRAY	rank02/get_next_line/tester/utils/color.hpp	/^	BG_LGRAY			= 47,$/;"	e	enum:Color
BG_LGREEN	rank02/ft_printf/tester/utils/color.hpp	/^	BG_LGREEN			= 102,$/;"	e	enum:Color
BG_LGREEN	rank02/get_next_line/tester/utils/color.hpp	/^	BG_LGREEN			= 102,$/;"	e	enum:Color
BG_LMAGENTA	rank02/ft_printf/tester/utils/color.hpp	/^	BG_LMAGENTA			= 105,$/;"	e	enum:Color
BG_LMAGENTA	rank02/get_next_line/tester/utils/color.hpp	/^	BG_LMAGENTA			= 105,$/;"	e	enum:Color
BG_LRED	rank02/ft_printf/tester/utils/color.hpp	/^	BG_LRED				= 101,$/;"	e	enum:Color
BG_LRED	rank02/get_next_line/tester/utils/color.hpp	/^	BG_LRED				= 101,$/;"	e	enum:Color
BG_LYELLOW	rank02/ft_printf/tester/utils/color.hpp	/^	BG_LYELLOW			= 103,$/;"	e	enum:Color
BG_LYELLOW	rank02/get_next_line/tester/utils/color.hpp	/^	BG_LYELLOW			= 103,$/;"	e	enum:Color
BG_MAGENTA	rank02/ft_printf/tester/utils/color.hpp	/^	BG_MAGENTA			= 45,$/;"	e	enum:Color
BG_MAGENTA	rank02/get_next_line/tester/utils/color.hpp	/^	BG_MAGENTA			= 45,$/;"	e	enum:Color
BG_RED	rank02/ft_printf/tester/utils/color.hpp	/^	BG_RED				= 41,$/;"	e	enum:Color
BG_RED	rank02/get_next_line/tester/utils/color.hpp	/^	BG_RED				= 41,$/;"	e	enum:Color
BG_WHITE	rank02/ft_printf/tester/utils/color.hpp	/^	BG_WHITE			= 107$/;"	e	enum:Color
BG_WHITE	rank02/get_next_line/tester/utils/color.hpp	/^	BG_WHITE			= 107$/;"	e	enum:Color
BG_YELLOW	rank02/ft_printf/tester/utils/color.hpp	/^	BG_YELLOW 			= 43,$/;"	e	enum:Color
BG_YELLOW	rank02/get_next_line/tester/utils/color.hpp	/^	BG_YELLOW 			= 43,$/;"	e	enum:Color
BLINK	rank02/ft_printf/tester/utils/color.hpp	/^	BLINK				= 5,$/;"	e	enum:Color
BLINK	rank02/get_next_line/tester/utils/color.hpp	/^	BLINK				= 5,$/;"	e	enum:Color
BOLD	rank02/ft_printf/tester/utils/color.hpp	/^	BOLD				= 1,$/;"	e	enum:Color
BOLD	rank02/get_next_line/tester/utils/color.hpp	/^	BOLD				= 1,$/;"	e	enum:Color
BONUS	rank02/ft_printf/tester/Makefile	/^BONUS			= minus 0 dot sharp space +$/;"	m
BONUS	rank02/get_next_line/tester/Makefile	/^BONUS					= bonus$/;"	m
BONUS_FILES	rank02/get_next_line/tester/Makefile	/^BONUS_FILES				= ..\/get_next_line_bonus.c ..\/get_next_line_utils_bonus.c$/;"	m
BONUS_HEADER	rank02/get_next_line/tester/Makefile	/^BONUS_HEADER			= ..\/get_next_line_bonus.h$/;"	m
BONUS_OBJS	rank02/get_next_line/tester/Makefile	/^BONUS_OBJS				= $(BONUS_FILES:..\/%.c=%.o)$/;"	m
BUFFER_SIZE	rank02/get_next_line/01/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
BUFFER_SIZE	rank02/get_next_line/02/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
BUFFER_SIZE	rank02/get_next_line/03/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
BUFFER_SIZE	rank02/get_next_line/04/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
BUFFER_SIZE	rank02/get_next_line/05/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
B_SIZE	rank02/ft_printf/tester/utils/print.hpp	/^# define B_SIZE /;"	d
CC	rank02/ft_printf/01/Makefile	/^CC = clang$/;"	m
CC	rank02/ft_printf/02/Makefile	/^CC = clang$/;"	m
CC	rank02/ft_printf/03/Makefile	/^CC = clang$/;"	m
CC	rank02/ft_printf/tester/Makefile	/^CC				= clang++ -std=c11 -Wno-everything$/;"	m
CFLAGS	rank02/ft_printf/01/Makefile	/^CFLAGS = -Wall -Wextra -Werror -c$/;"	m
CFLAGS	rank02/ft_printf/02/Makefile	/^CFLAGS = -Wall -Wextra -Werror -c$/;"	m
CFLAGS	rank02/ft_printf/03/Makefile	/^CFLAGS = -Wall -Wextra -Werror -c$/;"	m
CFLAGS	rank02/ft_printf/tester/Makefile	/^CFLAGS			= -g3 -ldl -std=c++11 -I utils\/ -I.. $(addprefix -I, $(shell find .. -regex ".*\/.*\\.h" | grep -oh ".*\\\/"))$/;"	m
CFLAGS	rank02/get_next_line/tester/Makefile	/^CFLAGS					= -g3 -Wall -Wextra -Werror$/;"	m
CHECK_HPP	rank02/ft_printf/tester/utils/check.hpp	/^# define CHECK_HPP$/;"	d
CHECK_HPP	rank02/get_next_line/tester/utils/check.hpp	/^# define CHECK_HPP$/;"	d
COLOR_HPP	rank02/ft_printf/tester/utils/color.hpp	/^# define COLOR_HPP$/;"	d
COLOR_HPP	rank02/get_next_line/tester/utils/color.hpp	/^# define COLOR_HPP$/;"	d
CPPFLAGS	rank02/get_next_line/tester/Makefile	/^CPPFLAGS				= -g3 -ldl -std=c++11 -I utils\/ -I.. -Wno-everything$/;"	m
Color	rank02/ft_printf/tester/utils/color.hpp	/^enum Color$/;"	g
Color	rank02/get_next_line/tester/utils/color.hpp	/^enum Color$/;"	g
DIM	rank02/ft_printf/tester/utils/color.hpp	/^	DIM					= 2,$/;"	e	enum:Color
DIM	rank02/get_next_line/tester/utils/color.hpp	/^	DIM					= 2,$/;"	e	enum:Color
ENDL	rank02/ft_printf/tester/utils/color.hpp	/^# define ENDL /;"	d
ENDL	rank02/get_next_line/tester/utils/color.hpp	/^# define ENDL /;"	d
FG_BLACK	rank02/ft_printf/tester/utils/color.hpp	/^	FG_BLACK			= 30,$/;"	e	enum:Color
FG_BLACK	rank02/get_next_line/tester/utils/color.hpp	/^	FG_BLACK			= 30,$/;"	e	enum:Color
FG_BLUE	rank02/ft_printf/tester/utils/color.hpp	/^	FG_BLUE				= 34,$/;"	e	enum:Color
FG_BLUE	rank02/get_next_line/tester/utils/color.hpp	/^	FG_BLUE				= 34,$/;"	e	enum:Color
FG_CYAN	rank02/ft_printf/tester/utils/color.hpp	/^	FG_CYAN				= 36,$/;"	e	enum:Color
FG_CYAN	rank02/get_next_line/tester/utils/color.hpp	/^	FG_CYAN				= 36,$/;"	e	enum:Color
FG_DEFAULT	rank02/ft_printf/tester/utils/color.hpp	/^	FG_DEFAULT			= 39,$/;"	e	enum:Color
FG_DEFAULT	rank02/get_next_line/tester/utils/color.hpp	/^	FG_DEFAULT			= 39,$/;"	e	enum:Color
FG_DGRAY	rank02/ft_printf/tester/utils/color.hpp	/^	FG_DGRAY			= 90,$/;"	e	enum:Color
FG_DGRAY	rank02/get_next_line/tester/utils/color.hpp	/^	FG_DGRAY			= 90,$/;"	e	enum:Color
FG_GREEN	rank02/ft_printf/tester/utils/color.hpp	/^	FG_GREEN			= 32,$/;"	e	enum:Color
FG_GREEN	rank02/get_next_line/tester/utils/color.hpp	/^	FG_GREEN			= 32,$/;"	e	enum:Color
FG_LBLUE	rank02/ft_printf/tester/utils/color.hpp	/^	FG_LBLUE			= 94,$/;"	e	enum:Color
FG_LBLUE	rank02/get_next_line/tester/utils/color.hpp	/^	FG_LBLUE			= 94,$/;"	e	enum:Color
FG_LCYAN	rank02/ft_printf/tester/utils/color.hpp	/^	FG_LCYAN			= 96,$/;"	e	enum:Color
FG_LCYAN	rank02/get_next_line/tester/utils/color.hpp	/^	FG_LCYAN			= 96,$/;"	e	enum:Color
FG_LGRAY	rank02/ft_printf/tester/utils/color.hpp	/^	FG_LGRAY			= 37,$/;"	e	enum:Color
FG_LGRAY	rank02/get_next_line/tester/utils/color.hpp	/^	FG_LGRAY			= 37,$/;"	e	enum:Color
FG_LGREEN	rank02/ft_printf/tester/utils/color.hpp	/^	FG_LGREEN			= 92,$/;"	e	enum:Color
FG_LGREEN	rank02/get_next_line/tester/utils/color.hpp	/^	FG_LGREEN			= 92,$/;"	e	enum:Color
FG_LMAGENTA	rank02/ft_printf/tester/utils/color.hpp	/^	FG_LMAGENTA			= 95,$/;"	e	enum:Color
FG_LMAGENTA	rank02/get_next_line/tester/utils/color.hpp	/^	FG_LMAGENTA			= 95,$/;"	e	enum:Color
FG_LRED	rank02/ft_printf/tester/utils/color.hpp	/^	FG_LRED				= 91,$/;"	e	enum:Color
FG_LRED	rank02/get_next_line/tester/utils/color.hpp	/^	FG_LRED				= 91,$/;"	e	enum:Color
FG_LYELLOW	rank02/ft_printf/tester/utils/color.hpp	/^	FG_LYELLOW			= 93,$/;"	e	enum:Color
FG_LYELLOW	rank02/get_next_line/tester/utils/color.hpp	/^	FG_LYELLOW			= 93,$/;"	e	enum:Color
FG_MAGENTA	rank02/ft_printf/tester/utils/color.hpp	/^	FG_MAGENTA			= 35,$/;"	e	enum:Color
FG_MAGENTA	rank02/get_next_line/tester/utils/color.hpp	/^	FG_MAGENTA			= 35,$/;"	e	enum:Color
FG_RED	rank02/ft_printf/tester/utils/color.hpp	/^	FG_RED				= 31,$/;"	e	enum:Color
FG_RED	rank02/get_next_line/tester/utils/color.hpp	/^	FG_RED				= 31,$/;"	e	enum:Color
FG_WHITE	rank02/ft_printf/tester/utils/color.hpp	/^	FG_WHITE			= 97,$/;"	e	enum:Color
FG_WHITE	rank02/get_next_line/tester/utils/color.hpp	/^	FG_WHITE			= 97,$/;"	e	enum:Color
FG_YELLOW	rank02/ft_printf/tester/utils/color.hpp	/^	FG_YELLOW 			= 33,$/;"	e	enum:Color
FG_YELLOW	rank02/get_next_line/tester/utils/color.hpp	/^	FG_YELLOW 			= 33,$/;"	e	enum:Color
FT_PRINTF	rank02/ft_printf/03/ft_printf.h	/^# define FT_PRINTF$/;"	d
FT_PRINTF_H	rank02/ft_printf/01/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
FT_PRINTF_H	rank02/ft_printf/02/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
GET_NEXT_LINE	rank02/get_next_line/03/get_next_line.h	/^# define GET_NEXT_LINE$/;"	d
GET_NEXT_LINE_H	rank02/get_next_line/01/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
GET_NEXT_LINE_H	rank02/get_next_line/02/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
GET_NEXT_LINE_H	rank02/get_next_line/05/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
GNL_H	rank02/get_next_line/04/get_next_line.h	/^# define GNL_H$/;"	d
GNL_HPP	rank02/get_next_line/tester/utils/gnl.hpp	/^# define GNL_HPP$/;"	d
HIDDEN	rank02/ft_printf/tester/utils/color.hpp	/^	HIDDEN				= 8,$/;"	e	enum:Color
HIDDEN	rank02/get_next_line/tester/utils/color.hpp	/^	HIDDEN				= 8,$/;"	e	enum:Color
LEAK_HPP	rank02/ft_printf/tester/utils/leaks.hpp	/^# define LEAK_HPP$/;"	d
LEAK_HPP	rank02/get_next_line/tester/utils/leaks.hpp	/^# define LEAK_HPP$/;"	d
MANDATORY	rank02/ft_printf/tester/Makefile	/^MANDATORY		= c s p d i u x upperx percent mix$/;"	m
MANDATORY	rank02/get_next_line/tester/Makefile	/^MANDATORY				= mandatory$/;"	m
MANDATORY_FILES	rank02/get_next_line/tester/Makefile	/^MANDATORY_FILES			= ..\/get_next_line.c ..\/get_next_line_utils.c$/;"	m
MANDATORY_HEADER	rank02/get_next_line/tester/Makefile	/^MANDATORY_HEADER		= ..\/get_next_line.h$/;"	m
MANDATORY_OBJS	rank02/get_next_line/tester/Makefile	/^MANDATORY_OBJS			= $(MANDATORY_FILES:..\/%.c=%.o)$/;"	m
NAME	rank02/ft_printf/01/Makefile	/^NAME = libftprintf.a$/;"	m
NAME	rank02/ft_printf/02/Makefile	/^NAME = libftprintf.a$/;"	m
NAME	rank02/ft_printf/03/Makefile	/^NAME = libftprintf.a$/;"	m
OBJS	rank02/ft_printf/01/Makefile	/^OBJS = ${SRCS:.c=.o}$/;"	m
OBJS	rank02/ft_printf/02/Makefile	/^OBJS = ${SRCS:.c=.o}$/;"	m
OBJS	rank02/ft_printf/03/Makefile	/^OBJS = ${SRCS:.c=.o}$/;"	m
PRINT_HPP	rank02/ft_printf/tester/utils/print.hpp	/^# define PRINT_HPP$/;"	d
RESET_ALL	rank02/ft_printf/tester/utils/color.hpp	/^	RESET_ALL			= 0,$/;"	e	enum:Color
RESET_ALL	rank02/get_next_line/tester/utils/color.hpp	/^	RESET_ALL			= 0,$/;"	e	enum:Color
RESET_BLINK	rank02/ft_printf/tester/utils/color.hpp	/^	RESET_BLINK			= 25,$/;"	e	enum:Color
RESET_BLINK	rank02/get_next_line/tester/utils/color.hpp	/^	RESET_BLINK			= 25,$/;"	e	enum:Color
RESET_BOLD	rank02/ft_printf/tester/utils/color.hpp	/^	RESET_BOLD			= 21,$/;"	e	enum:Color
RESET_BOLD	rank02/get_next_line/tester/utils/color.hpp	/^	RESET_BOLD			= 21,$/;"	e	enum:Color
RESET_DIM	rank02/ft_printf/tester/utils/color.hpp	/^	RESET_DIM			= 22,$/;"	e	enum:Color
RESET_DIM	rank02/get_next_line/tester/utils/color.hpp	/^	RESET_DIM			= 22,$/;"	e	enum:Color
RESET_HIDDEN	rank02/ft_printf/tester/utils/color.hpp	/^	RESET_HIDDEN		= 28,$/;"	e	enum:Color
RESET_HIDDEN	rank02/get_next_line/tester/utils/color.hpp	/^	RESET_HIDDEN		= 28,$/;"	e	enum:Color
RESET_REVERSED	rank02/ft_printf/tester/utils/color.hpp	/^	RESET_REVERSED		= 27,$/;"	e	enum:Color
RESET_REVERSED	rank02/get_next_line/tester/utils/color.hpp	/^	RESET_REVERSED		= 27,$/;"	e	enum:Color
RESET_UNDERLINED	rank02/ft_printf/tester/utils/color.hpp	/^	RESET_UNDERLINED	= 24,$/;"	e	enum:Color
RESET_UNDERLINED	rank02/get_next_line/tester/utils/color.hpp	/^	RESET_UNDERLINED	= 24,$/;"	e	enum:Color
REVERSED	rank02/ft_printf/tester/utils/color.hpp	/^	REVERSED			= 7,$/;"	e	enum:Color
REVERSED	rank02/get_next_line/tester/utils/color.hpp	/^	REVERSED			= 7,$/;"	e	enum:Color
RM	rank02/ft_printf/01/Makefile	/^RM = rm -f$/;"	m
RM	rank02/ft_printf/02/Makefile	/^RM = rm -f$/;"	m
RM	rank02/ft_printf/03/Makefile	/^RM = rm -f$/;"	m
SHELL	rank02/ft_printf/tester/Makefile	/^SHELL			= bash$/;"	m
SHELL	rank02/get_next_line/tester/Makefile	/^SHELL					= bash$/;"	m
SIGSEGV_HPP	rank02/ft_printf/tester/utils/sigsegv.hpp	/^# define SIGSEGV_HPP$/;"	d
SIGSEGV_HPP	rank02/get_next_line/tester/utils/sigsegv.hpp	/^# define SIGSEGV_HPP$/;"	d
SRCS	rank02/ft_printf/01/Makefile	/^SRCS = ft_printf.c	\\$/;"	m
SRCS	rank02/ft_printf/02/Makefile	/^SRCS = ft_printf.c \\$/;"	m
SRCS	rank02/ft_printf/03/Makefile	/^SRCS = ft_printf.c \\$/;"	m
SUBCATEGORY	rank02/ft_printf/tester/utils/print.hpp	/^# define SUBCATEGORY(/;"	d
TEST	rank02/ft_printf/tester/utils/print.hpp	/^# define TEST(/;"	d
TEST	rank02/get_next_line/tester/utils/gnl.hpp	/^#define TEST(/;"	d
TESTS_PATH	rank02/ft_printf/tester/Makefile	/^TESTS_PATH		= tests\/$/;"	m
TESTS_PATH	rank02/get_next_line/tester/Makefile	/^TESTS_PATH				= tests\/$/;"	m
TEST_LIMIT	rank02/ft_printf/tester/tests/+_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/0_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/c_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/d_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/dot_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/i_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/minus_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/mix_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/p_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/percent_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/s_test.cpp	/^# define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/sharp_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/space_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/u_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/upperx_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_LIMIT	rank02/ft_printf/tester/tests/x_test.cpp	/^#define TEST_LIMIT /;"	d	file:
TEST_NUMBER	rank02/ft_printf/tester/Makefile	/^TEST_NUMBER := $(wordlist 2, $(words $(MAKECMDGOALS)), $(MAKECMDGOALS))$/;"	m
TIMEOUT_US	rank02/ft_printf/tester/Makefile	/^TIMEOUT_US 		= 400000 #if you timeout you can try to increase this value$/;"	m
TIMEOUT_US	rank02/get_next_line/tester/Makefile	/^TIMEOUT_US				= 1000000$/;"	m
UNAME	rank02/ft_printf/tester/Makefile	/^UNAME = $(shell uname -s)$/;"	m
UNAME	rank02/get_next_line/tester/Makefile	/^UNAME = $(shell uname -s)$/;"	m
UNDERLINED	rank02/ft_printf/tester/utils/color.hpp	/^	UNDERLINED			= 4,$/;"	e	enum:Color
UNDERLINED	rank02/get_next_line/tester/utils/color.hpp	/^	UNDERLINED			= 4,$/;"	e	enum:Color
UTILS	rank02/ft_printf/tester/Makefile	/^UTILS			= $(addprefix $(UTILS_PATH), sigsegv.cpp color.cpp check.cpp leaks.cpp)$/;"	m
UTILS	rank02/get_next_line/tester/Makefile	/^UTILS					= utils\/sigsegv.cpp utils\/color.cpp utils\/check.cpp utils\/gnl.cpp utils\/leaks.cpp$/;"	m
UTILS_PATH	rank02/ft_printf/tester/Makefile	/^UTILS_PATH		= utils\/$/;"	m
VALGRIND	rank02/ft_printf/tester/Makefile	/^    VALGRIND = valgrind -q --leak-check=full --track-origins=yes$/;"	m
VALGRIND	rank02/get_next_line/tester/Makefile	/^    VALGRIND = valgrind -q --leak-check=full$/;"	m
check	rank02/ft_printf/tester/utils/check.cpp	/^void check(bool succes)$/;"	f
check	rank02/get_next_line/tester/utils/check.cpp	/^void check(bool succes)$/;"	f
checkn	rank02/ft_printf/tester/utils/print.hpp	/^void checkn(const char * s, Args... args)$/;"	f
free	rank02/ft_printf/tester/utils/leaks.cpp	/^void free(void * p) throw()$/;"	f
free	rank02/get_next_line/tester/utils/leaks.cpp	/^void free(void * p) throw()$/;"	f
ft_check_double	rank02/inter/int01.c	/^int		ft_check_double(char *str1, int str1_index, char c)$/;"	f
ft_chr	rank02/ft_printf/01/options1.c	/^int	ft_chr(va_list args)$/;"	f
ft_chr	rank02/ft_printf/02/options1.c	/^int	ft_chr(va_list args)$/;"	f
ft_chr	rank02/ft_printf/03/options.c	/^int ft_chr(va_list args)$/;"	f
ft_first_in_both	rank02/union/union02.c	/^int	ft_first_in_both(int index, char *s1, char *s2)$/;"	f
ft_first_in_self	rank02/union/union02.c	/^int	ft_first_in_self(int index, char *str)$/;"	f
ft_free	rank02/get_next_line/01/get_next_line_utils.c	/^void	*ft_free(void *str)$/;"	f
ft_get_line	rank02/get_next_line/01/get_next_line.c	/^static char	*ft_get_line(char *temp)$/;"	f	file:
ft_getline	rank02/get_next_line/02/get_next_line.c	/^static char	*ft_getline(char *temp)$/;"	f	file:
ft_has_nl	rank02/get_next_line/02/get_next_line_utils.c	/^int	ft_has_nl(char *str)$/;"	f
ft_has_nl	rank02/get_next_line/03/get_next_line_utils.c	/^int	ft_has_nl(char *str)$/;"	f
ft_has_nl	rank02/get_next_line/04/get_next_line_utils.c	/^int	ft_has_nl(char *str)$/;"	f
ft_has_nl	rank02/get_next_line/05/get_next_line_utils.c	/^size_t	ft_has_nl(char *str)$/;"	f
ft_hex	rank02/ft_printf/03/options.c	/^int ft_hex(va_list args)$/;"	f
ft_hx1	rank02/ft_printf/01/options2.c	/^int	ft_hx1(va_list args)$/;"	f
ft_hx1	rank02/ft_printf/02/options2.c	/^int	ft_hx1(va_list args)$/;"	f
ft_hx2	rank02/ft_printf/01/options2.c	/^int	ft_hx2(va_list args)$/;"	f
ft_hx2	rank02/ft_printf/02/options2.c	/^int	ft_hx2(va_list args)$/;"	f
ft_inter	rank02/inter/int01.c	/^void	ft_inter(char	*str1, char *str2)$/;"	f
ft_inter	rank02/inter/inter.c	/^void	ft_inter(char *s1, char *s2)$/;"	f
ft_isdouble	rank02/inter/inter.c	/^int	ft_isdouble(char c, char *s2)$/;"	f
ft_isfirst	rank02/inter/inter.c	/^int	ft_isfirst(int index, char *s1)$/;"	f
ft_locate_nl	rank02/get_next_line/01/get_next_line.c	/^static int	ft_locate_nl(char *str)$/;"	f	file:
ft_nbr	rank02/ft_printf/01/options1.c	/^int	ft_nbr(va_list args)$/;"	f
ft_nbr	rank02/ft_printf/02/options1.c	/^int	ft_nbr(va_list args)$/;"	f
ft_nbr	rank02/ft_printf/03/options.c	/^int ft_nbr(va_list args)$/;"	f
ft_newline	rank02/get_next_line/03/get_next_line.c	/^static char	*ft_newline(char *temp)$/;"	f	file:
ft_newline	rank02/get_next_line/04/get_next_line.c	/^static char	*ft_newline(char *temp)$/;"	f	file:
ft_newline	rank02/get_next_line/05/get_next_line.c	/^char	*ft_newline(char *temp)$/;"	f
ft_newtemp	rank02/get_next_line/03/get_next_line.c	/^static char	*ft_newtemp(char *temp)$/;"	f	file:
ft_newtemp	rank02/get_next_line/04/get_next_line.c	/^static char	*ft_newtemp(char *temp)$/;"	f	file:
ft_newtemp	rank02/get_next_line/05/get_next_line.c	/^char	*ft_newtemp(char *temp)$/;"	f
ft_once_in_both	rank02/union/union00.c	/^int ft_once_in_both(char *s1, char c)$/;"	f
ft_once_in_self	rank02/union/union00.c	/^int ft_once_in_self(char *s1, int index)$/;"	f
ft_once_in_self	rank02/union/union01.c	/^int	ft_once_in_self(char *str, int index)$/;"	f
ft_only_in_second	rank02/union/union01.c	/^int	ft_only_in_second(char *s1, char *s2, char c)$/;"	f
ft_parse	rank02/ft_printf/03/ft_printf.c	/^static int ft_parse(int (*options[7])(va_list), const char *fmt, va_list args)$/;"	f	file:
ft_pct	rank02/ft_printf/01/options1.c	/^int	ft_pct(va_list args)$/;"	f
ft_pct	rank02/ft_printf/02/options1.c	/^int	ft_pct(va_list args)$/;"	f
ft_pct	rank02/ft_printf/03/options.c	/^int ft_pct(va_list args)$/;"	f
ft_printf	rank02/ft_printf/01/ft_printf.c	/^int	ft_printf(const char *fmt, ...)$/;"	f
ft_printf	rank02/ft_printf/02/ft_printf.c	/^int	ft_printf(const char *fmt, ...)$/;"	f
ft_printf	rank02/ft_printf/03/ft_printf.c	/^int ft_printf(const char *fmt, ...)$/;"	f
ft_ptr	rank02/ft_printf/01/options2.c	/^int	ft_ptr(va_list args)$/;"	f
ft_ptr	rank02/ft_printf/02/options2.c	/^int	ft_ptr(va_list args)$/;"	f
ft_ptr	rank02/ft_printf/03/options.c	/^int ft_ptr(va_list args)$/;"	f
ft_putchar	rank02/ft_printf/01/tools.c	/^int	ft_putchar(char c)$/;"	f
ft_putchar	rank02/ft_printf/02/utils.c	/^int	ft_putchar(char c)$/;"	f
ft_putchar	rank02/ft_printf/03/tools.c	/^int	ft_putchar(char c)$/;"	f
ft_putnbrbase	rank02/ft_printf/01/tools.c	/^void	ft_putnbrbase(long n, int baselen, char *base, int *len)$/;"	f
ft_putnbrbase	rank02/ft_printf/02/utils.c	/^void	ft_putnbrbase(long nb, long baselen, char *base, int *ret)$/;"	f
ft_putnbrbase	rank02/ft_printf/03/tools.c	/^void	ft_putnbrbase(long nb, int baselen, char *base, int *ret)$/;"	f
ft_putnbrbase_ptr	rank02/ft_printf/01/tools.c	/^void	ft_putnbrbase_ptr(unsigned long n, int baselen, char *base, int *len)$/;"	f
ft_putnbrbase_ptr	rank02/ft_printf/02/utils.c	/^void	ft_putnbrbase_ptr(unsigned long nb, int baselen, char *base, int *ret)$/;"	f
ft_putnbrbaseptr	rank02/ft_printf/03/tools.c	/^void	ft_putnbrbaseptr(unsigned long nb, int baselen, char *base, int *ret)$/;"	f
ft_putstr	rank02/ft_printf/01/tools.c	/^int	ft_putstr(char *str)$/;"	f
ft_str	rank02/ft_printf/01/options1.c	/^int	ft_str(va_list args)$/;"	f
ft_str	rank02/ft_printf/02/options1.c	/^int	ft_str(va_list args)$/;"	f
ft_str	rank02/ft_printf/03/options.c	/^int ft_str(va_list args)$/;"	f
ft_strdup	rank02/get_next_line/01/get_next_line_utils.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_strdup	rank02/get_next_line/02/get_next_line_utils.c	/^char	*ft_strdup(char *s1)$/;"	f
ft_strdup	rank02/get_next_line/03/get_next_line_utils.c	/^char	*ft_strdup(char *str)$/;"	f
ft_strdup	rank02/get_next_line/04/get_next_line_utils.c	/^char	*ft_strdup(char *str)$/;"	f
ft_strdup	rank02/get_next_line/05/get_next_line_utils.c	/^char	*ft_strdup(char *str)$/;"	f
ft_strjoin	rank02/get_next_line/01/get_next_line_utils.c	/^char	*ft_strjoin(char *s1, char *s2)$/;"	f
ft_strjoin	rank02/get_next_line/02/get_next_line_utils.c	/^char	*ft_strjoin(char *s1, char *s2)$/;"	f
ft_strjoin	rank02/get_next_line/03/get_next_line_utils.c	/^char	*ft_strjoin(char *s1, char *s2)$/;"	f
ft_strjoin	rank02/get_next_line/04/get_next_line_utils.c	/^char	*ft_strjoin(char *s1, char *s2)$/;"	f
ft_strjoin	rank02/get_next_line/05/get_next_line_utils.c	/^char	*ft_strjoin(char *s1, char *s2)$/;"	f
ft_strlen	rank02/get_next_line/01/get_next_line_utils.c	/^size_t	ft_strlen(const char *s)$/;"	f
ft_strlen	rank02/get_next_line/02/get_next_line_utils.c	/^size_t	ft_strlen(char *str)$/;"	f
ft_strlen	rank02/get_next_line/03/get_next_line_utils.c	/^size_t	ft_strlen(char *str)$/;"	f
ft_strlen	rank02/get_next_line/04/get_next_line_utils.c	/^size_t	ft_strlen(char *str)$/;"	f
ft_strlen	rank02/get_next_line/05/get_next_line_utils.c	/^size_t	ft_strlen(char *str)$/;"	f
ft_substr	rank02/get_next_line/01/get_next_line_utils.c	/^char	*ft_substr(char *s, unsigned int start, size_t len)$/;"	f
ft_substr	rank02/get_next_line/02/get_next_line_utils.c	/^char	*ft_substr(char *s1, size_t start, size_t len)$/;"	f
ft_substr	rank02/get_next_line/03/get_next_line_utils.c	/^char	*ft_substr(char *str, size_t start, size_t len)$/;"	f
ft_substr	rank02/get_next_line/04/get_next_line_utils.c	/^char	*ft_substr(char *str, size_t start, size_t len)$/;"	f
ft_substr	rank02/get_next_line/05/get_next_line_utils.c	/^char	*ft_substr(char *str, size_t start, size_t len)$/;"	f
ft_uni	rank02/ft_printf/01/options2.c	/^int	ft_uni(va_list args)$/;"	f
ft_uni	rank02/ft_printf/02/options2.c	/^int	ft_uni(va_list args)$/;"	f
ft_union	rank02/union/union00.c	/^void ft_union(char *s1, char *s2)$/;"	f
ft_union	rank02/union/union01.c	/^void	ft_union(char *s1, char *s2)$/;"	f
ft_union	rank02/union/union02.c	/^void	ft_union(char *s1, char *s2)$/;"	f
ft_uns	rank02/ft_printf/03/options.c	/^int ft_uns(va_list args)$/;"	f
ft_update_temp	rank02/get_next_line/01/get_next_line.c	/^static char	*ft_update_temp(char *temp)$/;"	f	file:
ft_update_temp	rank02/get_next_line/02/get_next_line.c	/^static char	*ft_update_temp(char *temp)$/;"	f	file:
get_next_line	rank02/get_next_line/01/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f
get_next_line	rank02/get_next_line/02/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f
get_next_line	rank02/get_next_line/03/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f
get_next_line	rank02/get_next_line/04/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f
get_next_line	rank02/get_next_line/05/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f
gnl	rank02/get_next_line/tester/utils/gnl.cpp	/^void gnl(int fd, char const * expectedReturn)$/;"	f
iTest	rank02/ft_printf/tester/tests/+_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/0_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/c_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/d_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/dot_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/i_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/minus_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/mix_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/p_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/percent_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/s_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/sharp_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/space_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/u_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/upperx_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/ft_printf/tester/tests/x_test.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/get_next_line/tester/tests/bonus.cpp	/^int iTest = 1;$/;"	v
iTest	rank02/get_next_line/tester/tests/mandatory.cpp	/^int iTest = 1;$/;"	v
main	rank02/ft_printf/01/main.c	/^int	main(void)$/;"	f
main	rank02/ft_printf/02/main.c	/^int	main(void)$/;"	f
main	rank02/ft_printf/03/main.c	/^int	main(void)$/;"	f
main	rank02/ft_printf/tester/tests/+_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/0_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/c_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/d_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/dot_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/i_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/minus_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/mix_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/p_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/percent_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/s_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/sharp_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/space_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/u_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/upperx_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/ft_printf/tester/tests/x_test.cpp	/^int main(int ac, char ** av)$/;"	f
main	rank02/get_next_line/01/main.c	/^int	main(void)$/;"	f
main	rank02/get_next_line/02/main.c	/^int	main(void)$/;"	f
main	rank02/get_next_line/03/main.c	/^int	main(void)$/;"	f
main	rank02/get_next_line/04/main.c	/^int	main(void)$/;"	f
main	rank02/get_next_line/05/main.c	/^int	main(void)$/;"	f
main	rank02/get_next_line/tester/tests/bonus.cpp	/^int main(void)$/;"	f
main	rank02/get_next_line/tester/tests/mandatory.cpp	/^int main(void)$/;"	f
main	rank02/inter/int01.c	/^int		main(int ac, char **av)$/;"	f
main	rank02/inter/inter.c	/^int	main(int ac, char **av)$/;"	f
main	rank02/inter/inter00.c	/^int	main(int argc, char **argv) {$/;"	f
main	rank02/union/union00.c	/^int	main(int ac, char **av)$/;"	f
main	rank02/union/union01.c	/^int	main(int ac, char **av)$/;"	f
main	rank02/union/union02.c	/^int	main(int ac, char **av)$/;"	f
malloc	rank02/ft_printf/tester/utils/leaks.cpp	/^void * malloc(size_t size) throw()$/;"	f
malloc	rank02/get_next_line/tester/utils/leaks.cpp	/^void * malloc(size_t size) throw()$/;"	f
mallocList	rank02/ft_printf/tester/utils/leaks.cpp	/^std::vector<ptr> mallocList;$/;"	v
mallocList	rank02/get_next_line/tester/utils/leaks.cpp	/^std::vector<ptr> mallocList;$/;"	v
mallocListAdd	rank02/ft_printf/tester/utils/leaks.cpp	/^void mallocListAdd(void * p, size_t size)$/;"	f
mallocListAdd	rank02/get_next_line/tester/utils/leaks.cpp	/^void mallocListAdd(void * p, size_t size)$/;"	f
mallocListRemove	rank02/ft_printf/tester/utils/leaks.cpp	/^void mallocListRemove(void * p)$/;"	f
mallocListRemove	rank02/get_next_line/tester/utils/leaks.cpp	/^void mallocListRemove(void * p)$/;"	f
mcheck	rank02/ft_printf/tester/utils/check.cpp	/^void mcheck(void * p, size_t required_size)$/;"	f
mcheck	rank02/get_next_line/tester/utils/check.cpp	/^void mcheck(void * p, size_t required_size)$/;"	f
new	rank02/ft_printf/tester/tests/+_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/+_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/0_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/0_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/c_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/c_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/d_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/d_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/dot_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/dot_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/i_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/i_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/minus_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/minus_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/mix_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/mix_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/p_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/p_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/percent_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/percent_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/s_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/s_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/sharp_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/sharp_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/space_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/space_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/u_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/u_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/upperx_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/upperx_test.cpp	/^#undef new$/;"	d	file:
new	rank02/ft_printf/tester/tests/x_test.cpp	/^#define new /;"	d	file:
new	rank02/ft_printf/tester/tests/x_test.cpp	/^#undef new$/;"	d	file:
new	rank02/get_next_line/tester/tests/bonus.cpp	/^#define new /;"	d	file:
new	rank02/get_next_line/tester/tests/bonus.cpp	/^#undef new$/;"	d	file:
new	rank02/get_next_line/tester/tests/mandatory.cpp	/^#define new /;"	d	file:
new	rank02/get_next_line/tester/tests/mandatory.cpp	/^#undef new$/;"	d	file:
new	rank02/get_next_line/tester/utils/gnl.cpp	/^#define new /;"	d	file:
new	rank02/get_next_line/tester/utils/gnl.cpp	/^#undef new$/;"	d	file:
operator <<	rank02/ft_printf/tester/utils/color.cpp	/^operator<<(std::ostream & os, Color c)$/;"	f
operator <<	rank02/get_next_line/tester/utils/color.cpp	/^operator<<(std::ostream & os, Color c)$/;"	f
operator ==	rank02/ft_printf/tester/utils/leaks.cpp	/^bool operator==(ptr const & p1, ptr const & p2)$/;"	f
operator ==	rank02/get_next_line/tester/utils/leaks.cpp	/^bool operator==(ptr const & p1, ptr const & p2)$/;"	f
p	rank02/ft_printf/tester/utils/leaks.hpp	/^	void * p;$/;"	m	struct:ptr
p	rank02/get_next_line/tester/utils/leaks.hpp	/^	void * p;$/;"	m	struct:ptr
parser	rank02/ft_printf/02/ft_printf.c	/^static int	parser(int (*option[8])(va_list), const char *fmt, va_list args)$/;"	f	file:
parsing	rank02/ft_printf/01/ft_printf.c	/^static int	parsing(int (*option[8])(va_list), const char *fmt, va_list args)$/;"	f	file:
pipeOut	rank02/ft_printf/tester/utils/print.hpp	/^int pipeOut, stdOut;$/;"	v
print	rank02/ft_printf/tester/utils/print.hpp	/^void print(const char * s, Args... args)$/;"	f
printTestNumber	rank02/ft_printf/tester/utils/print.hpp	/^void printTestNumber(char * n, int limit)$/;"	f
ptr	rank02/ft_printf/tester/utils/leaks.hpp	/^	ptr(void * _p = 0, size_t _size = 0) : p(_p), size(_size) {}$/;"	f	struct:ptr
ptr	rank02/ft_printf/tester/utils/leaks.hpp	/^struct ptr$/;"	s
ptr	rank02/get_next_line/tester/utils/leaks.hpp	/^	ptr(void * _p = 0, size_t _size = 0) : p(_p), size(_size) {}$/;"	f	struct:ptr
ptr	rank02/get_next_line/tester/utils/leaks.hpp	/^struct ptr$/;"	s
showLeaks	rank02/ft_printf/tester/utils/leaks.cpp	/^void showLeaks(void)$/;"	f
showLeaks	rank02/get_next_line/tester/utils/leaks.cpp	/^void showLeaks(void)$/;"	f
showTest	rank02/ft_printf/tester/tests/+_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/0_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/c_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/d_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/dot_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/i_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/minus_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/mix_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/p_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/percent_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/s_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/sharp_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/space_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/u_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/upperx_test.cpp	/^bool showTest = false;$/;"	v
showTest	rank02/ft_printf/tester/tests/x_test.cpp	/^bool showTest = false;$/;"	v
showTestInfos	rank02/ft_printf/tester/utils/print.hpp	/^void showTestInfos(void)$/;"	f
sigsegv	rank02/ft_printf/tester/utils/sigsegv.cpp	/^void sigsegv(int signal)$/;"	f
sigsegv	rank02/get_next_line/tester/utils/sigsegv.cpp	/^void sigsegv(int signal)$/;"	f
size	rank02/ft_printf/tester/utils/leaks.hpp	/^	size_t size;$/;"	m	struct:ptr
size	rank02/get_next_line/tester/utils/leaks.hpp	/^	size_t size;$/;"	m	struct:ptr
solve	rank02/inter/inter00.c	/^void solve(char *str1, char *str2) {$/;"	f
stdOut	rank02/ft_printf/tester/utils/print.hpp	/^int pipeOut, stdOut;$/;"	v
testName	rank02/ft_printf/tester/tests/+_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/0_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/c_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/d_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/dot_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/i_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/minus_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/mix_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/p_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/percent_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/s_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/sharp_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/space_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/u_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/upperx_test.cpp	/^char * testName;$/;"	v
testName	rank02/ft_printf/tester/tests/x_test.cpp	/^char * testName;$/;"	v
testNumber	rank02/ft_printf/tester/tests/+_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/0_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/c_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/d_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/dot_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/i_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/minus_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/mix_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/p_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/percent_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/s_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/sharp_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/space_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/u_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/upperx_test.cpp	/^int testNumber;$/;"	v
testNumber	rank02/ft_printf/tester/tests/x_test.cpp	/^int testNumber;$/;"	v
title	rank02/ft_printf/tester/utils/check.hpp	/^# define title(/;"	d
title	rank02/get_next_line/tester/utils/check.hpp	/^# define title(/;"	d
